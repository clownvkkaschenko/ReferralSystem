---
openapi: 3.1.0
info:
  title: FastAPI Prosept Dealer
  version: 0.1.0
paths:
  "/token":
    post:
      tags:
      - Аутентификация
      summary: Получение JWT токена
      description: Аутентификация пользователя, получение JWT-токена.
      operationId: login_for_access_token_token_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LoginRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Token"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/users/":
    post:
      tags:
      - Аутентификация
      summary: Регистрация пользователей
      description: Регистрация нового пользователя.
      operationId: register_user_users__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserCreate"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/dealer_products":
    get:
      tags:
      - Карточки дилера
      summary: Список всех карточек от дилера
      description: |-
        - Получаем все объекты модели «MarketingDealerPrice», по значениям
          ID, из поля dealer_product_id модели «MatchingProductDealer».

        - Получаем все карточки с товарами дилеров.
      operationId: read_dealer_products_dealer_products_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  "$ref": "#/components/schemas/DealerProductModel"
                type: array
                title: Response Read Dealer Products Dealer Products Get
  "/dealer_products/{id}":
    get:
      tags:
      - Карточки дилера
      summary: Карточка дилера по ID
      description: |-
        - Получаем объект модели «MarketingDealerPrice» по значению ID,
          из поля поля dealer_product_id модели «MatchingProductDealer».

        - Получаем карточку дилера по ID.
      operationId: dealer_products_by_id_dealer_products__id__get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          description: ID объекта
          title: Id
        description: ID объекта
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DealerProductModel"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/matching":
    get:
      tags:
      - Матчинг
      summary: Список наиболее вероятных карточек производителя для каждой карточки
        дилера
      description: |-
        - Получаем все объекты модели «MatchingProductDealer».
        - В каждом объекте одна карточка дилера и пять карточек товаров Просепт.
      operationId: read_dealer_product_matching_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  "$ref": "#/components/schemas/MatchingProductDealerModel"
                type: array
                title: Response Read Dealer Product Matching Get
  "/matching/{dealer_product_id}":
    delete:
      tags:
      - Матчинг
      summary: Удалить карточку дилера
      description: |-
        - Удаляем объект модели «MatchingProductDealer», по значению
          поля dealer_product_id.

        - Удаляем карточку дилера и 5 связанных с ним карточек товаров Просепт.
      operationId: delete_product_matching__dealer_product_id__delete
      parameters:
      - name: dealer_product_id
        in: path
        required: true
        schema:
          type: integer
          description: ID карточки дилера
          title: Dealer Product Id
        description: ID карточки дилера
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    patch:
      tags:
      - Матчинг
      summary: Перенести карточку дилера в конец списка
      description: |-
        - Меняем поле order в модели «MatchingProductDealer», что-бы при сортировке
          по этому полю изменённый объект оказался в конце списка.

        - Переносим выбранную карточку дилера в конец списка.
      operationId: patch_product_matching__dealer_product_id__patch
      parameters:
      - name: dealer_product_id
        in: path
        required: true
        schema:
          type: integer
          description: ID карточки дилера
          title: Dealer Product Id
        description: ID карточки дилера
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
components:
  schemas:
    DealerProductModel:
      properties:
        id:
          type: integer
          title: Id
          description: ID объекта в БД
        dealer_name:
          type: string
          title: Dealer Name
          description: Название дилера
        product_name:
          type: string
          title: Product Name
          description: Название товара
        price:
          type: number
          title: Price
          description: Цена
        product_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Product Url
          description: Ссылка на товар
      type: object
      required:
      - id
      - dealer_name
      - product_name
      - price
      title: DealerProductModel
    HTTPValidationError:
      properties:
        detail:
          items:
            "$ref": "#/components/schemas/ValidationError"
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    LoginRequest:
      properties:
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
      type: object
      required:
      - username
      - password
      title: LoginRequest
    MarketingProductModel:
      properties:
        id:
          type: integer
          title: Id
        article:
          type: integer
          title: Article
        ean_13:
          type: string
          title: Ean 13
        cost:
          anyOf:
          - type: number
          - type: 'null'
          title: Cost
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        min_recommended_price:
          anyOf:
          - type: number
          - type: 'null'
          title: Min Recommended Price
        recommended_price:
          anyOf:
          - type: number
          - type: 'null'
          title: Recommended Price
        category_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Category Id
        ozon_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Ozon Name
        name_1c:
          anyOf:
          - type: string
          - type: 'null'
          title: Name 1C
        wb_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Wb Name
        ozon_article:
          anyOf:
          - type: string
          - type: 'null'
          title: Ozon Article
        wb_article:
          anyOf:
          - type: string
          - type: 'null'
          title: Wb Article
        ym_article:
          anyOf:
          - type: string
          - type: 'null'
          title: Ym Article
        wb_article_td:
          anyOf:
          - type: string
          - type: 'null'
          title: Wb Article Td
      type: object
      required:
      - id
      - article
      - ean_13
      title: MarketingProductModel
    MatchingProductDealerModel:
      properties:
        id:
          type: integer
          title: Id
          description: ID объекта в БД
        dealer_product:
          allOf:
          - "$ref": "#/components/schemas/DealerProductModel"
          description: Карточка товара дилера
        products:
          items:
            "$ref": "#/components/schemas/MarketingProductModel"
          type: array
          maxItems: 5
          minItems: 5
          title: Products
          description: Список который содержит пять товаров от Просепт
      type: object
      required:
      - id
      - dealer_product
      - products
      title: MatchingProductDealerModel
    Token:
      properties:
        access_token:
          type: string
          title: Access Token
        token_type:
          type: string
          title: Token Type
      type: object
      required:
      - access_token
      - token_type
      title: Token
    User:
      properties:
        username:
          type: string
          title: Username
        id:
          type: integer
          title: Id
      type: object
      required:
      - username
      - id
      title: User
    UserCreate:
      properties:
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
      type: object
      required:
      - username
      - password
      title: UserCreate
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
